epoch=1
	batch=0, batch_loss=10.11, regularization_loss=0.00, total_batch_loss=10.11, batch_accuracy= 0.12
	batch=500, batch_loss=0.34, regularization_loss=0.00, total_batch_loss=0.34, batch_accuracy= 0.81
	batch=1000, batch_loss=0.13, regularization_loss=0.00, total_batch_loss=0.13, batch_accuracy= 1.00
	batch=1500, batch_loss=0.69, regularization_loss=0.00, total_batch_loss=0.69, batch_accuracy= 0.75
	batch=2000, batch_loss=0.79, regularization_loss=0.00, total_batch_loss=0.79, batch_accuracy= 0.69
	batch=2500, batch_loss=0.10, regularization_loss=0.00, total_batch_loss=0.10, batch_accuracy= 1.00
	batch=3000, batch_loss=0.25, regularization_loss=0.00, total_batch_loss=0.25, batch_accuracy= 0.94
	batch=3374, batch_loss=0.26, regularization_loss=0.00, total_batch_loss=0.26, batch_accuracy= 0.81
training_loss=0.53, training_accuracy= 0.82
Validation: val_loss=0.40, val_accuracy=0.86
epoch=2
	batch=0, batch_loss=0.23, regularization_loss=0.00, total_batch_loss=0.23, batch_accuracy= 0.94
	batch=500, batch_loss=0.26, regularization_loss=0.00, total_batch_loss=0.26, batch_accuracy= 0.88
	batch=1000, batch_loss=0.08, regularization_loss=0.00, total_batch_loss=0.08, batch_accuracy= 1.00
	batch=1500, batch_loss=0.65, regularization_loss=0.00, total_batch_loss=0.65, batch_accuracy= 0.75
	batch=2000, batch_loss=0.70, regularization_loss=0.00, total_batch_loss=0.70, batch_accuracy= 0.75
	batch=2500, batch_loss=0.06, regularization_loss=0.00, total_batch_loss=0.06, batch_accuracy= 1.00
	batch=3000, batch_loss=0.16, regularization_loss=0.00, total_batch_loss=0.16, batch_accuracy= 1.00
	batch=3374, batch_loss=0.26, regularization_loss=0.00, total_batch_loss=0.26, batch_accuracy= 0.94
training_loss=0.36, training_accuracy= 0.87
Validation: val_loss=0.36, val_accuracy=0.87
epoch=3
	batch=0, batch_loss=0.16, regularization_loss=0.00, total_batch_loss=0.16, batch_accuracy= 0.94
	batch=500, batch_loss=0.20, regularization_loss=0.00, total_batch_loss=0.20, batch_accuracy= 0.94
	batch=1000, batch_loss=0.07, regularization_loss=0.00, total_batch_loss=0.07, batch_accuracy= 1.00
	batch=1500, batch_loss=0.55, regularization_loss=0.00, total_batch_loss=0.55, batch_accuracy= 0.75
	batch=2000, batch_loss=0.68, regularization_loss=0.00, total_batch_loss=0.68, batch_accuracy= 0.75
	batch=2500, batch_loss=0.05, regularization_loss=0.00, total_batch_loss=0.05, batch_accuracy= 1.00
	batch=3000, batch_loss=0.13, regularization_loss=0.00, total_batch_loss=0.13, batch_accuracy= 1.00
	batch=3374, batch_loss=0.22, regularization_loss=0.00, total_batch_loss=0.22, batch_accuracy= 0.94
training_loss=0.32, training_accuracy= 0.88
Validation: val_loss=0.34, val_accuracy=0.88
epoch=4
	batch=0, batch_loss=0.11, regularization_loss=0.00, total_batch_loss=0.11, batch_accuracy= 0.94
	batch=500, batch_loss=0.17, regularization_loss=0.00, total_batch_loss=0.17, batch_accuracy= 0.94
	batch=1000, batch_loss=0.06, regularization_loss=0.00, total_batch_loss=0.06, batch_accuracy= 1.00
	batch=1500, batch_loss=0.46, regularization_loss=0.00, total_batch_loss=0.46, batch_accuracy= 0.81
	batch=2000, batch_loss=0.65, regularization_loss=0.00, total_batch_loss=0.65, batch_accuracy= 0.75
	batch=2500, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=3000, batch_loss=0.13, regularization_loss=0.00, total_batch_loss=0.13, batch_accuracy= 1.00
	batch=3374, batch_loss=0.21, regularization_loss=0.00, total_batch_loss=0.21, batch_accuracy= 0.94
training_loss=0.29, training_accuracy= 0.89
Validation: val_loss=0.33, val_accuracy=0.88
epoch=5
	batch=0, batch_loss=0.09, regularization_loss=0.00, total_batch_loss=0.09, batch_accuracy= 0.94
	batch=500, batch_loss=0.17, regularization_loss=0.00, total_batch_loss=0.17, batch_accuracy= 0.94
	batch=1000, batch_loss=0.05, regularization_loss=0.00, total_batch_loss=0.05, batch_accuracy= 1.00
	batch=1500, batch_loss=0.39, regularization_loss=0.00, total_batch_loss=0.39, batch_accuracy= 0.81
	batch=2000, batch_loss=0.65, regularization_loss=0.00, total_batch_loss=0.65, batch_accuracy= 0.75
	batch=2500, batch_loss=0.03, regularization_loss=0.00, total_batch_loss=0.03, batch_accuracy= 1.00
	batch=3000, batch_loss=0.12, regularization_loss=0.00, total_batch_loss=0.12, batch_accuracy= 1.00
	batch=3374, batch_loss=0.20, regularization_loss=0.00, total_batch_loss=0.20, batch_accuracy= 0.94
training_loss=0.27, training_accuracy= 0.90
Validation: val_loss=0.32, val_accuracy=0.88
epoch=6
	batch=0, batch_loss=0.07, regularization_loss=0.00, total_batch_loss=0.07, batch_accuracy= 0.94
	batch=500, batch_loss=0.16, regularization_loss=0.00, total_batch_loss=0.16, batch_accuracy= 1.00
	batch=1000, batch_loss=0.05, regularization_loss=0.00, total_batch_loss=0.05, batch_accuracy= 1.00
	batch=1500, batch_loss=0.34, regularization_loss=0.00, total_batch_loss=0.34, batch_accuracy= 0.88
	batch=2000, batch_loss=0.62, regularization_loss=0.00, total_batch_loss=0.62, batch_accuracy= 0.75
	batch=2500, batch_loss=0.02, regularization_loss=0.00, total_batch_loss=0.02, batch_accuracy= 1.00
	batch=3000, batch_loss=0.10, regularization_loss=0.00, total_batch_loss=0.10, batch_accuracy= 1.00
	batch=3374, batch_loss=0.19, regularization_loss=0.00, total_batch_loss=0.19, batch_accuracy= 0.94
training_loss=0.25, training_accuracy= 0.91
Validation: val_loss=0.32, val_accuracy=0.88
epoch=7
	batch=0, batch_loss=0.07, regularization_loss=0.00, total_batch_loss=0.07, batch_accuracy= 0.94
	batch=500, batch_loss=0.14, regularization_loss=0.00, total_batch_loss=0.14, batch_accuracy= 1.00
	batch=1000, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=1500, batch_loss=0.30, regularization_loss=0.00, total_batch_loss=0.30, batch_accuracy= 0.94
	batch=2000, batch_loss=0.63, regularization_loss=0.00, total_batch_loss=0.63, batch_accuracy= 0.75
	batch=2500, batch_loss=0.02, regularization_loss=0.00, total_batch_loss=0.02, batch_accuracy= 1.00
	batch=3000, batch_loss=0.10, regularization_loss=0.00, total_batch_loss=0.10, batch_accuracy= 1.00
	batch=3374, batch_loss=0.20, regularization_loss=0.00, total_batch_loss=0.20, batch_accuracy= 0.94
training_loss=0.24, training_accuracy= 0.91
Validation: val_loss=0.31, val_accuracy=0.89
epoch=8
	batch=0, batch_loss=0.05, regularization_loss=0.00, total_batch_loss=0.05, batch_accuracy= 1.00
	batch=500, batch_loss=0.13, regularization_loss=0.00, total_batch_loss=0.13, batch_accuracy= 1.00
	batch=1000, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=1500, batch_loss=0.28, regularization_loss=0.00, total_batch_loss=0.28, batch_accuracy= 0.88
	batch=2000, batch_loss=0.62, regularization_loss=0.00, total_batch_loss=0.62, batch_accuracy= 0.81
	batch=2500, batch_loss=0.01, regularization_loss=0.00, total_batch_loss=0.01, batch_accuracy= 1.00
	batch=3000, batch_loss=0.10, regularization_loss=0.00, total_batch_loss=0.10, batch_accuracy= 1.00
	batch=3374, batch_loss=0.20, regularization_loss=0.00, total_batch_loss=0.20, batch_accuracy= 0.94
training_loss=0.22, training_accuracy= 0.92
Validation: val_loss=0.32, val_accuracy=0.89
epoch=9
	batch=0, batch_loss=0.05, regularization_loss=0.00, total_batch_loss=0.05, batch_accuracy= 1.00
	batch=500, batch_loss=0.12, regularization_loss=0.00, total_batch_loss=0.12, batch_accuracy= 1.00
	batch=1000, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=1500, batch_loss=0.26, regularization_loss=0.00, total_batch_loss=0.26, batch_accuracy= 0.94
	batch=2000, batch_loss=0.58, regularization_loss=0.00, total_batch_loss=0.58, batch_accuracy= 0.81
	batch=2500, batch_loss=0.01, regularization_loss=0.00, total_batch_loss=0.01, batch_accuracy= 1.00
	batch=3000, batch_loss=0.08, regularization_loss=0.00, total_batch_loss=0.08, batch_accuracy= 1.00
	batch=3374, batch_loss=0.17, regularization_loss=0.00, total_batch_loss=0.17, batch_accuracy= 0.94
training_loss=0.21, training_accuracy= 0.93
Validation: val_loss=0.32, val_accuracy=0.89
epoch=10
	batch=0, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=500, batch_loss=0.10, regularization_loss=0.00, total_batch_loss=0.10, batch_accuracy= 1.00
	batch=1000, batch_loss=0.04, regularization_loss=0.00, total_batch_loss=0.04, batch_accuracy= 1.00
	batch=1500, batch_loss=0.25, regularization_loss=0.00, total_batch_loss=0.25, batch_accuracy= 0.94
	batch=2000, batch_loss=0.52, regularization_loss=0.00, total_batch_loss=0.52, batch_accuracy= 0.81
	batch=2500, batch_loss=0.01, regularization_loss=0.00, total_batch_loss=0.01, batch_accuracy= 1.00
	batch=3000, batch_loss=0.09, regularization_loss=0.00, total_batch_loss=0.09, batch_accuracy= 1.00
Traceback (most recent call last):
  File "/home/sandip/Desktop/DL/Assignment 1/Test.py", line 118, in <module>
    wandb.log({"conf_mat": wandb.plot.confusion_matrix(probs=None,
  File "/home/sandip/anaconda3/lib/python3.9/site-packages/wandb/plot/confusion_matrix.py", line 55, in confusion_matrix
    assert max(preds) <= len(
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
	batch=3374, batch_loss=0.16, regularization_loss=0.00, total_batch_loss=0.16, batch_accuracy= 0.94
training_loss=0.20, training_accuracy= 0.93
Validation: val_loss=0.32, val_accuracy=0.89